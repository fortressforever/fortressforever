ps.1.4
;------------------------------------------------------------------------------
; Phase 1
;------------------------------------------------------------------------------
; Get the 3-vector from the normal map
texld  r0, t0
; Get environment matrix
texcrd r1.rgb, t1
texcrd r2.rgb, t2
texcrd r3.rgb, t3
; Normalize eye-ray vector through normalizer cube map
texld  r4, t4                  ; <---- CUBE MAP here!!!
;mov r0.rgba, r4

; Transform normal
dp3    r5.r, r1, r0_bx2
dp3    r5.g, r2, r0_bx2
dp3    r5.b, r3, r0_bx2
; Reflection calculatiom
dp3_x2 r3.rgb, r5, r4_bx2      ; 2(N.Eye)
mul    r3.rgb, r5, r3          ; 2N(N.Eye)
dp3    r2.rgb, r5, r5          ; N.N
mad    r2.rgb, -r4_bx2, r2, r3 ; 2N(N.Eye) - Eye(N.N)
; Alpha gets lost after phase marker, so store it here
mov    r5, r0.a
;------------------------------------------------------------------------------
; Phase 2
;------------------------------------------------------------------------------
phase
; Sample environment map
texld	r3, r2
; Result goes in output color (multiply by constant color c0)
mul		r0.rgb, r3, c0
+mov	r0.a, c0.a

mul		r1.rgb, r0, r0
lrp		r0.rgb, c1, r1, r0 ; blend between color and color * color
dp3		r1.rgb, r0, c3
lrp		r0.rgb, c2, r0, r1 ; blend between color and greyscale

; mult by alpha
mul		r0.rgb, r0, r5
